import{j as t}from"./jsx-runtime-WdPq8kIh.js";import{r as u}from"./index-BpYrhlGc.js";const s=({isOpen:r,onClose:o,position:e="left",children:d})=>{const p={transform:r?"translateX(0)":{left:"translateX(-100%)",right:"translateX(100%)",top:"translateY(-100%)",bottom:"translateY(100%)"}[e],transition:"transform 0.3s ease-in-out",position:"fixed",top:e==="top"||e==="bottom"?"0":void 0,bottom:e==="bottom"?"0":void 0,left:e==="left"?"0":void 0,right:e==="right"?"0":void 0,width:e==="left"||e==="right"?"250px":"100%",height:e==="top"||e==="bottom"?"250px":"100%",backgroundColor:"#fff",boxShadow:"0 4px 6px rgba(0, 0, 0, 0.1)",zIndex:1e3},c={display:r?"block":"none",position:"fixed",top:0,left:0,right:0,bottom:0,backgroundColor:"rgba(0, 0, 0, 0.5)",zIndex:999};return t.jsxs(t.Fragment,{children:[t.jsx("div",{style:c,onClick:o}),t.jsx("div",{style:p,children:d})]})};s.__docgenInfo={description:"",methods:[],displayName:"SlideDrawer",props:{isOpen:{required:!0,tsType:{name:"boolean"},description:""},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},position:{required:!1,tsType:{name:"union",raw:"'left' | 'right' | 'top' | 'bottom'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'right'"},{name:"literal",value:"'top'"},{name:"literal",value:"'bottom'"}]},description:"",defaultValue:{value:"'left'",computed:!1}},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const x={title:"LAYOUT/SlideDrawer",component:s,argTypes:{isOpen:{control:"boolean",defaultValue:!0},position:{control:"select",options:["left","right","top","bottom"],defaultValue:"left"}}},m=r=>{const[o,e]=u.useState(r.isOpen);return t.jsxs(t.Fragment,{children:[t.jsx("button",{onClick:()=>e(!o),children:"Toggle Drawer"}),t.jsx(s,{...r,isOpen:o,onClose:()=>e(!1),children:t.jsxs("div",{style:{padding:"16px"},children:[t.jsx("h3",{children:"SlideDrawer Content"}),t.jsx("p",{children:"This is the content inside the drawer."})]})})]})},n=m.bind({});n.args={isOpen:!0,position:"left"};var a,i,l;n.parameters={...n.parameters,docs:{...(a=n.parameters)==null?void 0:a.docs,source:{originalSource:`args => {
  const [isOpen, setIsOpen] = useState(args.isOpen);
  return <>\r
      <button onClick={() => setIsOpen(!isOpen)}>Toggle Drawer</button>\r
      <SlideDrawer {...args} isOpen={isOpen} onClose={() => setIsOpen(false)}>\r
        <div style={{
        padding: '16px'
      }}>\r
          <h3>SlideDrawer Content</h3>\r
          <p>This is the content inside the drawer.</p>\r
        </div>\r
      </SlideDrawer>\r
    </>;
}`,...(l=(i=n.parameters)==null?void 0:i.docs)==null?void 0:l.source}}};const b=["Default"];export{n as Default,b as __namedExportsOrder,x as default};
